name: An-Advanced-ToDo-App CI/CD in Ubuntu

on:
  push:
    branches: 
    - master
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      workdir: .

    name: Build on Ubuntu
    steps:
    - name: Checkout Project
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Cache Maven Packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.m2
          ~/.sonar/cache
        key: ${{ runner.os }}-m2-${{ hashFiles('pom.xml', '**/ubuntu.yml') }}
        restore-keys: ${{ runner.os }}-m2-
    - name: Build with Maven, SonarCloud and Docker
      run: >
        xvfb-run mvn verify -P jacoco,mutation-testing,docker sonar:sonar
        -Dsonar.organization=nikleo-eng-github
        -Dsonar.host.url=https://sonarcloud.io
        -Dsonar.projectKey=nikleo-eng_an-advanced-todo-app
      working-directory: ${{ env.workdir }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    - name: Generate JUnit-Jacoco Reports
      run: >
        xvfb-run mvn surefire-report:report-only site:site
        -DgenerateReports=false
      working-directory: ${{ env.workdir }}
      if: ${{ always() }}
    - name: Archive Pitest Report
      uses: actions/upload-artifact@v2
      if: ${{ always() }}
      with:
        name: pit-report
        path: '**/target/pit-reports'
        if-no-files-found: ignore
    - name: Archive JUnit-Jacoco Reports
      uses: actions/upload-artifact@v2
      if: ${{ always() }}
      with:
        name: surefire-report
        path: '**/target/site'
    - name: Add APP_VERSION Env Property
      run: >
         echo "app_version=$(mvn help:evaluate -Dexpression=project.version
         -q -DforceStdout)" >> $GITHUB_ENV
      working-directory: ${{ env.workdir }}
      if: ${{ success() }}
    - name: Create Compressed Archive of Final JARs
      run: >
         tar -czf an-advanced-todo-app-${{ env.app_version }}.tar.gz
         -C ./target an-advanced-todo-app*.jar
      working-directory: ${{ env.workdir }}
      if: ${{ success() }}
    - name: Create Compressed Archive of JavaFX Dependencies
      run: >
         tar -czf javafx-dependencies-${{ env.app_version }}.tar.gz
         -C ./target/maven-javafx-dependencies .
      working-directory: ${{ env.workdir }}
      if: ${{ success() }}
    - name: Create Tag and Release with Final JARs and JavaFX Dependencies
      uses: ncipollo/release-action@v1
      if: ${{ success() }}
      with:
        allowUpdates: true
        artifactErrorsFailBuild: true
        artifacts: >
           an-advanced-todo-app-${{ env.app_version }}.tar.gz,
           javafx-dependencies-${{ env.app_version }}.tar.gz
        artifactContentType: application/gzip
        commit: ${{ env.GITHUB_SHA }}
        draft: false
        generateReleaseNotes: false
        name: v${{ env.app_version }}
        omitBody: false
        omitBodyDuringUpdate: false
        omitDraftDuringUpdate: true
        omitName: false
        omitNameDuringUpdate: false
        omitPrereleaseDuringUpdate: true
        prerelease: false
        removeArtifacts: false
        replacesArtifacts: true
        tag: v${{ env.app_version }}
        token: ${{ secrets.GITHUB_TOKEN }}