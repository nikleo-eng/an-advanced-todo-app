name: An-Advanced-ToDo-App Tag&Release in Ubuntu

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string

jobs:
  tag-release:
    runs-on: ubuntu-latest
    env:
      workdir: .

    name: Tag&Release on Ubuntu
    steps:
    - name: Checkout Project
      uses: actions/checkout@v2
    - name: Download Final JAR
      uses: actions/download-artifact@v2
      with:
        name: final-jar
    - name: Download JavaFX Dependencies
      uses: actions/download-artifact@v2
      with:
        name: javafx-dependencies
    - name: Add SHORT_SHA Env Property
      run: echo "short_sha=`echo ${GITHUB_SHA} | cut -c1-7`" >> $GITHUB_ENV
      if: ${{ success() }}
    - name: Add APP_VERSION Env Property
      run: >
         echo "app_version=$(mvn help:evaluate -Dexpression=project.version
         -q -DforceStdout)" >> $GITHUB_ENV
      working-directory: ${{ env.workdir }}
      if: ${{ success() }}
    - name: Install ZIP Utility
      run: sudo apt install zip
      if: ${{ success() && (inputs.os == 'win') }}
    - name: Create ZIP Compressed Archive of Final JAR and JavaFX Dependencies
      run: >
         zip -q an-advanced-todo-app-${{ env.app_version }}-${{ inputs.os }}.zip
         an-advanced-todo-app-${{ env.app_version }}-${{ inputs.os }}*.jar
         maven-javafx-dependencies/${{ inputs.os }}/*.jar
      working-directory: ${{ env.workdir }}/target
      if: ${{ success() && (inputs.os == 'win') }}
    - name: Create TAR.GZ Compressed Archive of Final JAR and JavaFX Dependencies
      run: >
         tar -czf an-advanced-todo-app-${{ env.app_version }}-${{ inputs.os }}.tar.gz
         an-advanced-todo-app-${{ env.app_version }}-${{ inputs.os }}*.jar
         maven-javafx-dependencies/${{ inputs.os }}/*.jar
      working-directory: ${{ env.workdir }}/target
      if: ${{ success() && (inputs.os != 'win') }}
    - name: Create Tag and Release
      uses: ncipollo/release-action@v1
      if: ${{ success() }}
      with:
        allowUpdates: true
        artifactErrorsFailBuild: true
        artifacts: target/an-advanced-todo-app-${{ env.app_version }}-${{ inputs.os }}.*
        artifactContentType: raw
        commit: ${{ env.GITHUB_SHA }}
        draft: false
        generateReleaseNotes: false
        name: v${{ env.app_version }}-${{ env.short_sha }}
        omitBody: true
        omitBodyDuringUpdate: true
        omitDraftDuringUpdate: true
        omitName: false
        omitNameDuringUpdate: false
        omitPrereleaseDuringUpdate: true
        prerelease: false
        removeArtifacts: false
        replacesArtifacts: true
        tag: v${{ env.app_version }}-${{ env.short_sha }}
        token: ${{ secrets.GITHUB_TOKEN }}